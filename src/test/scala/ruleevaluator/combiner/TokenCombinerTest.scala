package ruleevaluator.combiner

import org.scalatest.funsuite.AnyFunSuite
import org.scalatest.matchers.should.Matchers
import ruleevaluator.exception
import ruleevaluator.rule.Rule
import ruleevaluator.token._

/**
 * Generated by ChatGPT. A test for the TokenCombiner class.
 */
class TokenCombinerTest extends AnyFunSuite with Matchers {

  test("combineTokensToConditions should return a list of tokens with conditions") {
    val ageField = Argument.CsvField("age", 30)
    val ageValue = Argument.DoubleArg(18.5)
    val anotherAgeField = Argument.CsvField("age", 60)
    val anotherAgeValue = Argument.DoubleArg(65.5)

    val tokens = List(
      ageField,
      ComparisonOperator.GreaterEqual,
      ageValue,
      LogicalOperator.Or,
      anotherAgeField,
      ComparisonOperator.Less,
      anotherAgeValue
    )

    val combiner = new TokenCombiner(tokens, 1)
    val result = combiner.combineTokensToConditions()
    result.isValid shouldBe true

    result.toList.flatten should contain theSameElementsInOrderAs List(
      Composite.Condition(Rule(ComparisonOperator.GreaterEqual, ageField, ageValue)),
      LogicalOperator.Or,
      Composite.Condition(Rule(ComparisonOperator.Less, anotherAgeField, anotherAgeValue))
    )
  }
}
